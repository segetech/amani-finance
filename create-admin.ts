import { createClient } from '@supabase/supabase-js'
import * as dotenv from 'dotenv'
import * as path from 'path'

// Charger les variables d'environnement
dotenv.config({ path: path.resolve(__dirname, '.env') })

// R√©cup√©rer les variables d'environnement
const supabaseUrl = process.env.VITE_SUPABASE_URL
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !serviceRoleKey) {
  console.error('Erreur: Les variables d\'environnement VITE_SUPABASE_URL et SUPABASE_SERVICE_ROLE_KEY sont requises')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, serviceRoleKey)

async function createAdminUser() {
  const email = 'salika.famanta@aikio.co'
  const password = 'AmaniFinance2024!' // Mot de passe fort g√©n√©r√©
  
  console.log('Cr√©ation de l\'utilisateur admin...')
  
  try {
    // 1. Cr√©er l'utilisateur
    const { data: authData, error: signUpError } = await supabase.auth.admin.createUser({
      email,
      password,
      email_confirm: true,
      user_metadata: {
        role: 'admin',
        full_name: 'Salika Famanta'
      }
    })

    if (signUpError) throw signUpError

    const userId = authData.user.id
    console.log('‚úÖ Utilisateur cr√©√© avec succ√®s. ID:', userId)

    // 2. Ajouter √† la table utilisateurs
    const { error: profileError } = await supabase
      .from('utilisateurs')
      .insert([{ 
        id: userId,
        email: email,
        nom: 'Famanta',
        prenom: 'Salika'
      }])

    if (profileError) {
      console.warn('‚ö†Ô∏è L\'utilisateur a √©t√© cr√©√© mais il y a eu un probl√®me avec la table utilisateurs:', profileError.message)
      console.log('Vous pouvez ajouter manuellement l\'utilisateur √† la table utilisateurs avec l\'ID:', userId)
      return
    }

    console.log('‚úÖ Administrateur cr√©√© avec succ√®s dans la table utilisateurs!')
    console.log('üìß Email:', email)
    console.log('üîë Mot de passe:', password)
    console.log('üÜî ID utilisateur:', userId)
    console.log('\n‚ö†Ô∏è IMPORTANT: Changez ce mot de passe apr√®s votre premi√®re connexion! ‚ö†Ô∏è')
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation de l\'administrateur:')
    console.error(error)
    
    if (error.message.includes('already registered')) {
      console.log('\n‚ÑπÔ∏è  Cet utilisateur existe d√©j√†. Connectez-vous avec l\'email et le mot de passe.')
    }
  }
}

createAdminUser()
